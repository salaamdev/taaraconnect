services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: taara-web
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./data/taara_monitoring.db
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./.env:/app/.env:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/api/data', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - taara-network

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: taara-scheduler
    environment:
      - DATABASE_URL=sqlite:///./data/taara_monitoring.db
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./.env:/app/.env:ro
    command: python scheduler.py
    restart: unless-stopped
    depends_on:
      app:
        condition: service_healthy
    networks:
      - taara-network

  nginx:
    image: nginx:alpine
    container_name: taara-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./static:/usr/share/nginx/html/static:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - taara-network

networks:
  taara-network:
    driver: bridge

volumes:
  data:
  logs:
